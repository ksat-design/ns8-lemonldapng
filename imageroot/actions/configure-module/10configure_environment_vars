#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import sys
import json
import agent
import urllib.request
import urllib.error
import ssl

# Validation weight (0 = validation-only step)
agent.set_weight(os.path.basename(__file__), 0)

# Load configuration data from stdin
data = json.load(sys.stdin)

# --- Hostname validation ---
host = data.get("host")
old_host = os.environ.get("TRAEFIK_HOST", "")

if host != old_host and agent.http_route_in_use(domain=host):
    agent.set_status('validation-failed')
    json.dump(
        [{
            'field': 'host',
            'parameter': 'host',
            'value': host,
            'error': 'domain_already_used_in_traefik'
        }],
        fp=sys.stdout
    )
    sys.exit(2)

# Set lemdomain in the environment for use by other scripts
agent.set_env("lemdomain", host)

# --- LDAP Domain ---
ldap_domain = data.get("ldap_domain", "")

# Bind user to domain
if ldap_domain:
    agent.bind_user_domains([ldap_domain])
else:
    agent.bind_user_domains([])

# Set LDAP domain env
agent.set_env("LDAP_DOMAIN", ldap_domain)

# --- CDA ---
cda = data.get("cda_status", False)
agent.set_env("CDA_STATUS", "True" if cda else "False")

# --- SAML ---
saml = data.get("saml_status", False)
agent.set_env("SAML_STATUS", "True" if saml else "False")

# --- Sample Apps ---
sample_apps = data.get("sample_apps_status", True)  # default to enabled
agent.set_env("SAMPLE_APPS_STATUS", "True" if sample_apps else "False")
