#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import json
import sys
import agent

data = json.load(sys.stdin)

# Setup default values
ldap_domain = data.get("ldap_domain", "")

# Bind user to the domain
if ldap_domain:
    agent.bind_user_domains([ldap_domain])
else:
    agent.bind_user_domains([])

# Setup LDAP domain
agent.set_env("LDAP_DOMAIN", ldap_domain)

# Setup cross domain authentication
cda = data.get("cda_status", False)
agent.set_env("CDA_STATUS", "True" if cda else "False")

# Setup SAML status
saml = data.get("saml_status", False)
agent.set_env("SAML_STATUS", "True" if saml else "False")

# Setup Sample Apps toggle
sample_apps = data.get("sample_apps_status", True)
agent.set_env("SAMPLE_APPS_STATUS", "True" if sample_apps else "False")

# Run cleanup script if sample apps are disabled
if not sample_apps:
    try:
        print("Sample apps disabled. Running update-sample-apps-settings script...")
        result = agent.run(["/usr/local/bin/update-sample-apps-settings"])
        print(result)
    except Exception as e:
        print(f"Error running update-sample-apps-settings: {e}", file=sys.stderr)
