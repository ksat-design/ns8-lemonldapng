#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import subprocess
import sys

apps_enabled = os.getenv("SAMPLE_APPS_ENABLED", "False") == "True"

def get_domain():
    """Fetch the configured domain from LemonLDAP::NG."""
    try:
        result = subprocess.run(
            [
                "podman", "exec", "lemonldapng-app",
                "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "get", "domain"
            ],
            capture_output=True, text=True, check=True
        )
        for line in result.stdout.splitlines():
            if line.startswith("domain"):
                return line.split("= ")[1].strip()
    except subprocess.CalledProcessError as e:
        print(f"Error retrieving domain: {e.stderr}", file=sys.stderr)
        sys.exit(1)

def run_cli_command(args):
    """Execute LemonLDAP::NG CLI command inside the container."""
    subprocess.run(args, check=True)

if apps_enabled:
    domain = get_domain()
    print(f"Sample apps are enabled. Adding category for domain: {domain}", file=sys.stderr)

    run_cli_command([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1",
        "addKey", "applicationList/applications", "type", "category",
        "applicationList/applications", "catname", "Sample applications"
    ])

else:
    domain = get_domain()
    print(f"Sample apps are disabled. Removing category for domain: {domain}", file=sys.stderr)

    run_cli_command([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1",
        "delKey", "applicationList", "1sample"
    ])
