#!/usr/bin/env python3

import os
import subprocess
import sys

def sample_apps_exist():
    """Check if the URI for Sample App 2 exists."""
    try:
        result = subprocess.run(
            [
                "podman", "exec", "lemonldapng-app",
                "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli",
                "-yes", "1", "get",
                "applicationList/1sample/test2/options/uri"
            ],
            capture_output=True, text=True, check=True
        )
        uri = result.stdout.strip().lower()
        return "uri =" in uri or uri.startswith("http")
    except subprocess.CalledProcessError:
        return False

def create_sample_apps():
    """Create the sample apps using correct bash logic."""
    ssodomain = os.getenv("SSODOMAIN")
    if not ssodomain:
        raise EnvironmentError("SSODOMAIN environment variable is not set.")

    print("Creating sample apps...")

    # Category and test1 definition
    subprocess.run([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "addKey",
        "applicationList/1sample", "type", "category",
        "applicationList/1sample", "catname", "Sample applications"
    ], check=True)

    subprocess.run([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "addKey",
        "applicationList/1sample/test1", "type", "application"
    ], check=True)

    # Test1 options
    subprocess.run([
        "podman", "exec", "lemonldapng-app", "bash", "-c",
        f"/usr/share/lemonldap-ng/bin/lemonldap-ng-cli -yes 1 addKey "
        f"applicationList/1sample/test1/options name 'Application Test 1' "
        f"applicationList/1sample/test1/options description 'A simple application displaying authenticated user' "
        f"applicationList/1sample/test1/options display auto "
        f"applicationList/1sample/test1/options logo demo.png "
        f"applicationList/1sample/test1/options uri 'http://test1.{ssodomain}/'"
    ], check=True)

    # Test2 options
    subprocess.run([
        "podman", "exec", "lemonldapng-app", "bash", "-c",
        f"/usr/share/lemonldap-ng/bin/lemonldap-ng-cli -yes 1 addKey "
        f"applicationList/1sample/test2/options name 'Application Test 2' "
        f"applicationList/1sample/test2/options description 'The same simple application displaying authenticated user' "
        f"applicationList/1sample/test2/options display auto "
        f"applicationList/1sample/test2/options logo thumbnail.png "
        f"applicationList/1sample/test2/options uri 'http://test2.{ssodomain}/'"
    ], check=True)

def delete_sample_apps():
    """Delete the sample apps and category."""
    print("Removing sample apps...")
    commands = [
        ["applicationList/1sample/test2"],
        ["applicationList/1sample/test1"],
        ["applicationList/1sample"]
    ]
    for path in commands:
        subprocess.run([
            "podman", "exec", "lemonldapng-app",
            "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1", "delKey", path[0]
        ], check=False)

# Determine what to do based on env and app existence
sample_apps_enabled = os.getenv("SAMPLE_APPS_STATUS", "true").lower() == "true"
apps_exist = sample_apps_exist()

if sample_apps_enabled:
    if not apps_exist:
        create_sample_apps()
    else:
        print("Sample apps already exist — nothing to do.")
else:
    if apps_exist:
        delete_sample_apps()
    else:
        print("Sample apps already removed — nothing to do.")
