#!/usr/bin/env python3

import os
import subprocess
import sys
import argparse


def load_env(env_file="/etc/lemonldap-ng/env"):
    if os.path.exists(env_file):
        with open(env_file) as f:
            for line in f:
                if '=' in line:
                    key, val = line.strip().split('=', 1)
                    os.environ.setdefault(key, val)


def run_command(cmd, shell=False):
    return subprocess.run(cmd, shell=shell, check=True, text=True)


def add_sample_apps():
    ssodomain = os.getenv("SSODOMAIN")
    if not ssodomain:
        print("SSODOMAIN is not set. Please export it or include it in the environment file.")
        sys.exit(1)

    # Only proceed if toggle enabled or forced
    if os.getenv("SAMPLE_APPS_STATUS", "True") != "True" and not args.force:
        print("SAMPLE_APPS_STATUS is not enabled. Use --force to override.")
        sys.exit(0)

    # Skip creation if apps already exist
    if not args.force:
        try:
            run_command([
                "podman", "exec", "lemonldapng-app",
                "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1",
                "get", "applicationList/1sample"
            ])
            print("Sample applications already exist; skipping creation.")
            return
        except subprocess.CalledProcessError:
            # not present, continue to create
            pass

    print(f"Creating sample apps for {ssodomain}...")

    run_command([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1",
        "addKey", "applicationList/1sample", "type", "category",
        "applicationList/1sample", "catname", "Sample applications"
    ])
    run_command([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1",
        "addKey", "applicationList/1sample/test1", "type", "application"
    ])
    run_command([
        "podman", "exec", "lemonldapng-app", "bash", "-c",
        f"/usr/share/lemonldap-ng/bin/lemonldap-ng-cli -yes 1 addKey "
        f"applicationList/1sample/test1/options name 'Application Test 1' "
        f"applicationList/1sample/test1/options description 'A simple application displaying authenticated user' "
        f"applicationList/1sample/test1/options display auto "
        f"applicationList/1sample/test1/options logo demo.png "
        f"applicationList/1sample/test1/options uri 'http://test1.{ssodomain}/'"
    ])
    run_command([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1",
        "addKey", "applicationList/1sample/test2", "type", "application"
    ])
    run_command([
        "podman", "exec", "lemonldapng-app", "bash", "-c",
        f"/usr/share/lemonldap-ng/bin/lemonldap-ng-cli -yes 1 addKey "
        f"applicationList/1sample/test2/options name 'Application Test 2' "
        f"applicationList/1sample/test2/options description 'The same simple application displaying authenticated user' "
        f"applicationList/1sample/test2/options display auto "
        f"applicationList/1sample/test2/options logo thumbnail.png "
        f"applicationList/1sample/test2/options uri 'http://test2.{ssodomain}/'"
    ])
    print("Sample applications successfully created.")


def remove_sample_apps():
    # Only proceed if toggle disabled or forced
    if os.getenv("SAMPLE_APPS_STATUS", "True") == "True" and not args.force:
        print("SAMPLE_APPS_STATUS is still enabled. Use --force to override removal.")
        sys.exit(0)

    print("Removing sample applications...")
    run_command([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1",
        "delKey", "applicationList/1sample/test2"
    ])
    run_command([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1",
        "delKey", "applicationList/1sample/test1"
    ])
    run_command([
        "podman", "exec", "lemonldapng-app",
        "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1",
        "delKey", "applicationList/1sample"
    ])
    print("Sample applications successfully removed.")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Manage LemonLDAP::NG sample apps based on toggle.")
    parser.add_argument("mode", nargs="?", choices=["add", "remove"], default="add", help="Action to perform (default: add)")
    parser.add_argument("--force", action="store_true", help="Override SAMPLE_APPS_STATUS check")
    args = parser.parse_args()

    load_env()

    if args.mode == "add":
        add_sample_apps()
    elif args.mode == "remove":
        remove_sample_apps()
