#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import os
import subprocess
import json

# Check whether sample apps are enabled
sample_apps_enabled = os.getenv("SAMPLE_APPS_STATUS", "False") == "True"

# Define the podman exec base command for LemonLDAP::NG CLI
cli = [
    "podman", "exec", "lemonldapng-app",
    "/usr/share/lemonldap-ng/bin/lemonldap-ng-cli", "-yes", "1"
]

if sample_apps_enabled:
    # Assuming SSODOMAIN is already set in the environment
    SSODOMAIN = os.getenv('SSODOMAIN', '').strip()

    if SSODOMAIN:
        # Check if the sample apps exist by looking at the URI
        check_command = [
            *cli,
            "get", "applicationList/1sample/test2/options/uri"
        ]
        
        try:
            result = subprocess.run(check_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True, check=True)
            if result.stdout.strip():
                print("Sample apps already exist. Skipping add operation.")
            else:
                print("Sample apps do not exist. Adding sample apps...")

                # Build the nested JSON structure
                sample_apps = {
                    "type": "category",
                    "catname": "Sample applications",
                    "test1": {
                        "options": {
                            "description": "A simple application displaying authenticated user",
                            "display": "auto",
                            "logo": "demo.png",
                            "name": "Test 1",
                            "uri": f"https://test1.{SSODOMAIN}/"
                        }
                    },
                    "test2": {
                        "type": "application",
                        "options": {
                            "description": "A simple application displaying authenticated user",
                            "display": "auto",
                            "logo": "demo.png",
                            "name": "Test 2",
                            "uri": f"https://test2.{SSODOMAIN}/"
                        }
                    }
                }

                set_command = [
                    *cli,
                    "set", "applicationList/1sample",
                    json.dumps(sample_apps)
                ]
                subprocess.run(set_command, check=True)
        except subprocess.CalledProcessError as e:
            print("Error checking or setting sample apps:", file=sys.stderr)
            print(e.stderr, file=sys.stderr)
            sys.exit(1)
    else:
        print("The 'SSODOMAIN' environment variable is not set!", file=sys.stderr)
        sys.exit(1)

else:
    # If sample apps are disabled, remove the entries
    print("Sample apps are disabled. Removing entries...", file=sys.stderr)

    remove_command = [
        *cli, 
        "delKey",
        "applicationList/1sample", "test1",
        "applicationList/1sample", "test2",
        "applicationList", "1sample"
    ]

    try:
        subprocess.run(remove_command, check=True)
    except subprocess.CalledProcessError as e:
        print("Error deleting sample apps:", file=sys.stderr)
        print(e.stderr, file=sys.stderr)
        sys.exit(1)
